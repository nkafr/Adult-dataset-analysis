source('~/KCompetition_GettingStarted.R')
forest = randomForest(Party ~.-USER_ID , data=train)
predtrain=predict(forest)
table(train$Party, predtrain)
source('~/KCompetition_GettingStarted.R')
table(train$Party, predtrain)
table(train$Party, predtrain>0.5)
View(train)
summary(SimpleMod)
contrasts(train$Gender)
train2 = read.csv("train2016.csv",na.strings=c("",".","NA"))
contrasts(train$HouseholdStatus)
contrasts(train2$HouseholdStatus)
write.csv(train, "peirama.csv", row.names=FALSE)
train = read.csv("peirama.csv")
source('~/KCompetition_GettingStarted.R')
write.csv(test, "peirama2.csv", row.names=FALSE)
test = read.csv("peirama2.csv")
rm(train2)
source('~/KCompetition_GettingStarted.R')
table(train$Party, predtrain>0.5)
(2041+1658)/nrow(train)
source('~/KCompetition_GettingStarted.R')
source('~/KCompetition_GettingStarted.R')
source('~/KCompetition_GettingStarted.R')
table(train$Party, predtrain>0.5)
source('~/KCompetition_GettingStarted.R')
table(train$Party, predtrain>0.5)
source('~/KCompetition_GettingStarted.R')
table(train$Party, predtrain>0.5)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(train)
train$YOB = destring(as.character(train$YOB))
installed.packages("eeptools")
install.packages("eeptools")
train$YOB = destring(as.character(train$YOB))
library(eeptools)
train$YOB = destring(as.character(train$YOB))
test$YOB = destring(as.character(test$YOB))
install.packages(" taRifx")
library(eeptools)
train$YOB = destring(as.character(train$YOB))
train$YOB = makenum(as.character(train$YOB))
test$YOB = makenum(as.character(test$YOB))
incomeLevels = c("under $25,000", "$25,001 - $50,000", "$50,000 - $74,999", "$75,000 - $100,000", "$100,001 - $150,000", "over $150,000")
train$Income = factor(train$Income,levels=incomeLevels,ordered=TRUE)
test$Income = factor(test$Income,levels=incomeLevels,ordered=TRUE)
educationLevels = c("Current K-12", "High School Diploma", "Current Undergraduate",
"Associate's Degree", "Bachelor's Degree", "Master's Degree",
"Doctoral Degree")
train$EducationLevel =factor(train$EducationLevel,levels=educationLevels,ordered=TRUE)
test$EducationLevel = factor(test$EducationLevel, levels=educationLevels, ordered=TRUE)
dependent=train$Party
imputationColumns =  c("YOB", "Gender", "Income", "HouseholdStatus", "EducationLevel")
all = rbind(train[-c(7)], test)
simple = all[imputationColumns]
imputed=complete(mice(simple,m=10))
train$YOB = imputed[1:nrow(train),]$YOB
train$Gender = imputed[1:nrow(train),]$Gender
train$Income = imputed[1:nrow(train),]$Income
train$HouseholdStatus = imputed[1:nrow(train),]$HouseholdStatus
train$EducationLevel = imputed[1:nrow(train),]$EducationLevel
test$YOB = imputed[(nrow(train) + 1):nrow(all),]$YOB
test$Gender = imputed[(nrow(train) + 1):nrow(all),]$Gender
test$Income = imputed[(nrow(train) + 1):nrow(all),]$Income
test$HouseholdStatus = imputed[(nrow(train) + 1):nrow(all),]$HouseholdStatus
test$EducationLevel = imputed[(nrow(train) + 1):nrow(all),]$EducationLevel
View(train)
source('~/KCompetition_GettingStarted.R')
predictrain=predict(forest)
table(train$Party,predictrain)
(2133+1395)/nrow(train)
train2 = read.csv("train2016.csv",na.strings=c("",".","NA"))
View(train2)
which(train2[train2<1931])
which(train2<1931)
View(train2)
which(train2$YOB<1931)
which(train2$YOB>2001)
SimpleMod = glm(Party ~ YOB+ Income+ EducationLevel+ HouseholdStatus+ Q109244*Q115611*Q98197*Q113181, data=train, family="binomial")
source('~/KCompetition_GettingStarted.R')
write.csv(train, "peirama.csv", row.names=FALSE)
train = read.csv("peirama.csv")
write.csv(test, "peirama2.csv", row.names=FALSE)
test = read.csv("peirama2.csv")
source('~/KCompetition_GettingStarted.R')
source('~/KCompetition_GettingStarted.R')
source('~/KCompetition_GettingStarted.R')
rm(train2)
train[which(train2$YOB>2001)]==NA
train[which(train$YOB>2001)]==NA
train$YOB[which(train$YOB>2001)]==NA
train$YOB[which(train$YOB>2001)]=NA
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/KCompetition_GettingStarted.R')
which(test$YOB<1931)
train$YOB[which(train$YOB>2001)]=NA
which(test$YOB<1931)
which(test$YOB>2001)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/KCompetition_GettingStarted.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
train[, 1]==0
source('~/.active-rstudio-document')
train[1, 2]
x=(train[1, 1]==0)
x
i
source('~/.active-rstudio-document')
train[j, i]
j
source('~/.active-rstudio-document')
train[2, 8]
source('~/.active-rstudio-document')
train[2, 8]
train = read.csv("train2016.csv",na.strings=c("",".","NA"))
test = read.csv("test2016.csv",na.strings=c("",".","NA"))
train$YOB[which(train$YOB>2001)]=NA
train$YOB[which(train$YOB<1931)]=NA
test$YOB[which(test$YOB>2001)]=NA
test$YOB[which(test$YOB<1931)]=NA
for (i in 8:108) {
train[, i] = as.numeric(train[, i]) - 1
}
for (j in 8:108) {
for (i in 1:nrow(train)) {
if(train[i, j]==0) {train[i, j]=-1}
}
train[, j][is.na(train[, j])] = 0
}
train[1, 8]
train[2, 8]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
train2 = read.csv("train2016.csv",na.strings=c("",".","NA"))
View(train2)
source('~/.active-rstudio-document')
View(train2)
source('~/.active-rstudio-document')
View(test)
source('~/KCompetition_GettingStarted.R')
View(test)
test2 = read.csv("test2016.csv",na.strings=c("",".","NA"))
View(test2)
happyGBM = gbm(Party ~., data=train,n.trees=5000,shrinkage=0.0056,verbose=FALSE,cv.folds=16,n.cores=4,interaction.depth=1)
install.packages("gbm")
library(gbm)
happyGBM = gbm(Party ~., data=train,n.trees=5000,shrinkage=0.0056,verbose=FALSE,cv.folds=16,n.cores=4,interaction.depth=1)
happyGBM = gbm(Party ~., data=train,n.trees=5000,shrinkage=0.0056,verbose=FALSE,cv.folds=16,n.cores=2,interaction.depth=1)
train$Party=as.factor(ifelse(train$Party==0, "Democrat", "Republican"))
happyGBM = gbm(Party ~., data=train,n.trees=5000,shrinkage=0.0056,verbose=FALSE,cv.folds=16,n,interaction.depth=1)
source('~/KCompetition_GettingStarted.R')
source('~/KCompetition_GettingStarted.R')
source('~/Apopeira4.R')
source('~/KCompetition_GettingStarted.R')
happyGBM = gbm(Party ~., data=train,n.trees=5000,shrinkage=0.0056,verbose=FALSE,cv.folds=16,n.cores=4,interaction.depth=1)
happyGBM = gbm(Party ~., data=train,distribution="bernoulli",n.trees=5000,shrinkage=0.0056,verbose=FALSE,cv.folds=16,interaction.depth=1)
cxdsce
happyGBM = gbm(Party ~., data=train,distribution="bernoulli",n.trees=5000,n.cores=4, shrinkage=0.0056,verbose=FALSE,cv.folds=16,interaction.depth=1)
source('~/Apopeira5.R')
train$Party=as.numeric(ifelse(train$Party=="Democrat", 0, 1))
View(train)
happyGBM = gbm(Party ~., data=train,distribution="bernoulli",n.trees=5000,n.cores=4, shrinkage=0.0056,verbose=FALSE,cv.folds=16,interaction.depth=1)
test$Party=as.numeric(ifelse(test$Party=="Democrat", 0, 1))
gbmresponse=predict(happyGBM,newdata=test, type="response")
PredTestLabels = as.factor(ifelse(gbmresponse<threshold, "Democrat", "Republican"))
gbmtrain=predict(happyGBM,data=train, type="response")
table(train$Party, gbmtrain>o.5)
table(train$Party, gbmtrain>0.5)
(2076+1557)/nrow(train)
MySubmission = data.frame(USER_ID = test$USER_ID, Predictions= PredTestLabels)
happyGBM = gbm(Party ~ ~YOB+ Income+ EducationLevel+ HouseholdStatus+ Q109244+ Q115611+ Q98197 +Q113181 +Q98869 +Q101163 + Q99480 +Q105840 +Q120379 + Q116881+ +Q106272+ Q120472 + Q115899 + Q102089 +Q110740 + Q119851 +Q121699 +Q115195 + Q106042 +Q118232 + Q100680 + Q118892 +Q107869, data=train,distribution="bernoulli",n.trees=5000,shrinkage=0.0056,verbose=FALSE,cv.folds=16,interaction.depth=1)
happyGBM = gbm(Party ~ YOB+ Income+ EducationLevel+ HouseholdStatus+ Q109244+ Q115611+ Q98197 +Q113181 +Q98869 +Q101163 + Q99480 +Q105840 +Q120379 + Q116881+ +Q106272+ Q120472 + Q115899 + Q102089 +Q110740 + Q119851 +Q121699 +Q115195 + Q106042 +Q118232 + Q100680 + Q118892 +Q107869, data=train,distribution="bernoulli",n.trees=5000,shrinkage=0.0056,verbose=FALSE,cv.folds=16,interaction.depth=1)
gbmresponse=predict(happyGBM,newdata=test, type="response")
threshold = 0.5
PredTestLabels = as.factor(ifelse(gbmresponse<threshold, "Democrat", "Republican"))
MySubmission = data.frame(USER_ID = test$USER_ID, Predictions= PredTestLabels)
write.csv(MySubmission, "SubmissionSimpleLog.csv", row.names=FALSE)
train = read.csv("train2016.csv",na.strings=c("",".","NA"))
test = read.csv("test2016.csv",na.strings=c("",".","NA"))
table(train$HouseholdStatus)
train$DomesticPartnersKids=if(train$HouseholdStatus=="Domestic Partners (no kids)" & (!is.na(train$HouseholdStatus))) {train$HouseholdStatus=0}
View(train)
train$DomesticPartnersKids=if(train$HouseholdStatus=="Domestic Partners (no kids)" & (!is.na(train$HouseholdStatus))) {train$HouseholdStatus=0}
train$DomesticPartnersKids=if(train$HouseholdStatus=="Domestic Partners (no kids)") {train$HouseholdStatus=0}
View(train)
train$DomesticPartnersKids=if(train$HouseholdStatus=="Domestic Partners (no kids)") {train$DomesticPartnersKids=0}
train$DomesticPartnersKids=ifelse(grepl("Domestic Partners (no kids)",train$HouseholdStatus,fixed=TRUE), 1, 0)
View(train)
train$DomesticPartnersKids[1:10]
train$DomesticPartnersKids[1:25]
train$DomesticPartnersKids[1:30]
train = read.csv("train2016.csv",na.strings=c("",".","NA"))
train$DomesticPartnersKids=if(grepl("Domestic Partners (no kids)" ) {train$DomesticPartnersKids=1}
train$DomesticPartnersKids=if(grepl("Domestic Partners (no kids)" )) {train$DomesticPartnersKids=1}
train$DomesticPartnersKids=if(grepl("Domestic Partners (no kids)",,train$HouseholdStatus,fixed=TRUE )) {train$DomesticPartnersKids=1}
train$DomesticPartnersKids=if(grepl("Domestic Partners (no kids)",train$HouseholdStatus,fixed=TRUE )) {train$DomesticPartnersKids=1}
train$DomesticPartnersKids=train$HouseholdStatus
train = read.csv("train2016.csv",na.strings=c("",".","NA"))
for(i in 1:nrow(train)){
if(is.na(train$HouseholdStatus[i])){
train$DomesticPartnersKids[i]=NA
}
if(train$HouseholdStatus[i]=="Domestic Partners (no kids)"){
train$DomesticPartnersKids[1]=1
}else{
train$DomesticPartnersKids[1]=0
}
}
train = read.csv("train2016.csv",na.strings=c("",".","NA"))
for(i in 1:nrow(train)){
if(is.na(train$HouseholdStatus[i])){
train$DomesticPartnersKids[i]=NA
}
if(train$HouseholdStatus[i]=="Domestic Partners (no kids)" & (!is.na(train$HouseholdStatus[i]))  ){
train$DomesticPartnersKids[1]=1
}else{
train$DomesticPartnersKids[1]=0
}
}
View(train)
train$DomesticPartnersKids[1:30]
source('~/.active-rstudio-document')
train$DomesticPartnersKids[1:30]
train = read.csv("train2016.csv",na.strings=c("",".","NA"))
source('~/.active-rstudio-document')
train$DomesticPartnersKids[1:30]
source('~/.active-rstudio-document')
train$DomesticPartnersKids[1:30]
train2$HouseholdStatus[1:30]
source('~/.active-rstudio-document')
train$DomesticPartnersKidsW[1:30]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
train$SingleW[1:30]
train$SingleW[40]
train$SingleN[1:30]
train$MarriedN[1:30]
table(train$EducationLevel)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
train$Associate
table(train$EducationLevel)[1:30]
table(train$EducationLevel)[1:30]
(train$EducationLevel)[1:30]
train$Associate[1:30]
train$Bachelor[1:30]
train$K12[1:30]
train$uNDER[1:30]
train$Under[1:30]
train$Doctorate[1:30]
train$Doctoral[1:30]
train$Master[1:30]
train$School[1:30]
train$AvgIncome[ dataset$Income == "$100,001 - $150,000"] = 100000
train$AvgIncome[ train$Income == "$100,001 - $150,000"] = 100000
train$AvgIncome[ train$Income == "$25,001 - $50,000"] = 25000
train$AvgIncome[ train$Income == "$50,000 - $74,999"] = 50000
train$AvgIncome[ train$Income == "$75,000 - $100,000"] = 75000
train$AvgIncome[ train$Income == ""over $150,000"] = 150000
train$AvgIncome[ train$Income == "over $150,000"] = 150000
train$AvgIncome[ train$Income == "under $25,000"] = 12500
train$AvgIncome[1:30]
train$Income[1:30]
source('~/Apopeira5.R')
View(train)
str(train)
train$DomesticPartnersKids[1:10]
train$DomesticPartnersKids[1:30]
test$DomesticPartnersKids[1:30]
train$AvgIncome[1:30]
test$AvgIncome[ train$Income == "$100,001 - $150,000"] = 100000
test$AvgIncome[ test$Income == "$100,001 - $150,000"] = 100000
test$AvgIncome[ test$Income == "$25,001 - $50,000"] = 25000
test$AvgIncome[ test$Income == "$50,000 - $74,999"] = 50000
test$AvgIncome[ test$Income == "$75,000 - $100,000"] = 75000
test$AvgIncome[ test$Income == "over $150,000"] = 150000
test$AvgIncome[ test$Income == "under $25,000"] = 12500
source('~/KCompetition_GettingStarted.R')
predtrain=predict(forest)
table(train$Party,predtrain)
(2178+1373)/nrow(train)
source('~/KCompetition_GettingStarted.R')
source('~/Apopeira5.R')
source('~/Apopeira5.R')
table(train$HouseholdStatus)
table(train$Income)
source('~/KCompetition_GettingStarted.R')
source('~/KCompetition_GettingStarted.R')
source('~/Apopeira5.R')
source('~/KCompetition_GettingStarted.R')
print(forest)
importance(forest)
tune.rf <- tuneRF(train[,-7],train[,7], stepFactor=0.5)
tune.rf <- tuneRF(train[,-7],train[,7], improve=0.05, stepFactor=0.5)
tune.rf <- tuneRF(train[,-7],train[,7], improve=0.05, stepFactor=0.5)
print(tune.rf)
rf_model<-train(Party ~YOB+ Income+ EducationLevel+ HouseholdStatus+ Q109244+ Q115611+ Q98197 +Q113181 +Q98869 +Q101163 + Q99480 +Q105840 +Q120379 + Q116881+ +Q106272+ Q120472 + Q115899 + Q102089 +Q110740 + Q119851 +Q121699 +Q115195 + Q106042 +Q118232 + Q100680 + Q118892 +Q107869~., data=train ,method="rf",trControl=trainControl(method="cv",number=5),prox=TRUE,allowParallel=TRUE)
library(caret)
rf_model<-train(Party ~YOB+ Income+ EducationLevel+ HouseholdStatus+ Q109244+ Q115611+ Q98197 +Q113181 +Q98869 +Q101163 + Q99480 +Q105840 +Q120379 + Q116881+ +Q106272+ Q120472 + Q115899 + Q102089 +Q110740 + Q119851 +Q121699 +Q115195 + Q106042 +Q118232 + Q100680 + Q118892 +Q107869~., data=train ,method="rf",trControl=trainControl(method="cv",number=5),prox=TRUE,allowParallel=TRUE)
rf_model<-train(Party ~YOB+ Income+ EducationLevel+ HouseholdStatus+ Q109244+ Q115611+ Q98197 +Q113181 +Q98869 +Q101163 + Q99480 +Q105840 +Q120379 + Q116881+ +Q106272+ Q120472 + Q115899 + Q102089 +Q110740 + Q119851 +Q121699 +Q115195 + Q106042 +Q118232 + Q100680 + Q118892 +Q107869, data=train ,method="rf",trControl=trainControl(method="cv",number=5),prox=TRUE,allowParallel=TRUE)
print(rf_model)
print(rf_model$finalModel)
rf_model<-train(Party ~YOB+ Income+ EducationLevel+ HouseholdStatus+ Q109244+ Q115611+ Q98197 +Q113181 +Q98869 +Q101163 + Q99480 +Q105840 +Q120379 + Q116881+ +Q106272+ Q120472 + Q115899 + Q102089 +Q110740 + Q119851 +Q121699 +Q115195 + Q106042 +Q118232 + Q100680 + Q118892 +Q107869, data=train ,method="rf",trControl=trainControl(method="cv",number=5),prox=TRUE,allowParallel=TRUE,ntree=800,nodesize=30)
print(rf_model$finalModel)
rf_model<-train(Party ~YOB+ Income+ EducationLevel+ HouseholdStatus+ Q109244+ Q115611+ Q98197 +Q113181 +Q98869 +Q101163 + Q99480 +Q105840 +Q120379 + Q116881+ +Q106272+ Q120472 + Q115899 + Q102089 +Q110740 + Q119851 +Q121699 +Q115195 + Q106042 +Q118232 + Q100680 + Q118892 +Q107869, data=train ,method="rf",trControl=trainControl(method="cv",number=5),prox=TRUE,allowParallel=TRUE,ntree=2000,nodesize=30)
print(rf_model)
rf_model<-train(Party ~YOB+ Income+ EducationLevel+ HouseholdStatus+ Q109244+ Q115611+ Q98197 +Q113181 +Q98869 +Q101163 + Q99480 +Q105840 +Q120379 + Q116881+ +Q106272+ Q120472 + Q115899 + Q102089 +Q110740 + Q119851 +Q121699 +Q115195 + Q106042 +Q118232 + Q100680 + Q118892 +Q107869, data=train ,method="rf",trControl=trainControl(method="cv",number=5),prox=TRUE,allowParallel=TRUE,ntree=600,nodesize=30)
print(rf_model)
rf_model<-train(Party ~YOB+ Income+ EducationLevel+ HouseholdStatus+ Q109244+ Q115611+ Q98197 +Q113181 +Q98869 +Q101163 + Q99480 +Q105840 +Q120379 + Q116881+ +Q106272+ Q120472 + Q115899 + Q102089 +Q110740 + Q119851 +Q121699 +Q115195 + Q106042 +Q118232 + Q100680 + Q118892 +Q107869, data=train ,method="rf",trControl=trainControl(method="cv",number=5),prox=TRUE,allowParallel=TRUE,ntree=800,nodesize=30)
print(rf_model)
source('~/KCompetition_GettingStarted.R')
source('~/Apopeira5.R')
source('~/Apopeira5.R')
source('~/KCompetition_GettingStarted.R')
rf_model<-train(Party ~YOB+ Income+ EducationLevel+ HouseholdStatus+ Q109244+ Q115611+ Q98197 +Q113181 +Q98869 +Q101163 + Q99480 +Q105840 +Q120379 + Q116881+ +Q106272+ Q120472 + Q115899 + Q102089 +Q110740 + Q119851 +Q121699 +Q115195 + Q106042 +Q118232 + Q100680 + Q118892 +Q107869, data=train ,method="rf",trControl=trainControl(method="cv",number=5),prox=TRUE,allowParallel=TRUE,ntree=700,nodesize=30)
print(rf_model)
source('~/Apopeira5.R')
source('~/Apopeira5.R')
source('~/KCompetition_GettingStarted.R')
source('~/Apopeira5.R')
source('~/KCompetition_GettingStarted.R')
source('~/KCompetition_GettingStarted.R')
source('~/KCompetition_GettingStarted.R')
write.csv(train, "peirama.csv", row.names=FALSE)
train = read.csv("peirama.csv")
write.csv(test, "peirama2.csv", row.names=FALSE)
test = read.csv("peirama2.csv")
SimpleMod = glm(Party ~YOB+ Income+ EducationLevel+ HouseholdStatus+ Q109244+ Q115611+ Q98197 +Q113181 +Q98869 +Q101163 + Q99480 +Q105840 +Q120379 + Q116881+ +Q106272+ Q120472 + Q115899 + Q102089 +Q110740 + Q119851 +Q121699 +Q115195 + Q106042 +Q118232 + Q100680 + Q118892 +Q107869,family="binomial",data=train)
PredTest = predict(SimpleMod, newdata=test, type="response")
threshold = 0.5
PredTestLabels = as.factor(ifelse(PredTest<threshold, "Democrat", "Republican"))
MySubmission = data.frame(USER_ID = test$USER_ID, Predictions= PredTestLabels)
Q109244 = as.numeric(train$Q109244) - 1
t.test(Q109244[train$Party == 'Democrat'], Q109244[train$Party == 'Republican'])
t.test(Q118892[train$Party == 'Democrat'], Q118892[train$Party == 'Republican'])
Q118892 = as.numeric(train$Q118892) - 1
t.test(Q118892[train$Party == 'Democrat'], Q118892[train$Party == 'Republican'])
table(test$Q109244)
table(train$Party, test$Q109244)
table(train$Party, train$Q109244)
source('~/KCompetition_GettingStarted.R')
table(train$Party, train$Q109244)
train = read.csv("train2016.csv",na.strings=c("",".","NA"))
table(train$Party, train$Q109244)
1038/(1038+1421)
742/(742+183)
1000/1024
rm(list=ls())
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
plot(train)
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
View(X)
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/predictlog.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/predictlog.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Apopeira5.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/predictlog.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/predictlog.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/preprocessing.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
View(train)
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
train=read.csv("adult.csv", header=F, col.names=c("age", "type_employer", "fnlwgt", "education",
"education_num","marital", "occupation", "relationship", "race","sex",
"capital_gain", "capital_loss", "hr_per_week","country", "over50k"), stringsAsFactors = FALSE)
adult=train
boxplotted=subset(adult, is.numeric(adult))
View(boxplotted)
boxplotted=subset(adult, is.integer(adult))
adult=lapply(adult, is.integer(adult))
adult=lapply(adult, function(x) is.integer(adult[[x]]))
nums <- sapply(adult, is.numeric)
nums
boxplot(adult[nums])
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
df.m=met(train,id.var=over50k)
df.m=melt(train,id.var=over50k)
install.packages(reshape2)
install.packages("reshape2")
library(reshape2)
df.m=melt(train,id.var=over50k)
rm(list=ls())
train=read.csv("adult.csv", header=F, col.names=c("age", "type_employer", "fnlwgt", "education",
"education_num","marital", "occupation", "relationship", "race","sex",
"capital_gain", "capital_loss", "hr_per_week","country", "over50k"), stringsAsFactors = FALSE)
df.m=melt(train,id.var=over50k)
View(train)
df.m=melt(train,id.var="over50k")
library(ggplot2)
View(df.m)
p <- ggplot(data = df.m, aes(x=variable, y=value)) +
geom_boxplot(aes(fill=Label))
p + facet_wrap( ~ variable, scales="free")
p <- ggplot(data = df.m, aes(x=variable, y=value)) +
geom_boxplot(aes(fill=over50k))
p + facet_wrap( ~ variable, scales="free")
p
dfer
p <- ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=over50k)) + facet_wrap( ~ variable, scales="free")
p
p
print(p)
train=read.csv("adult.csv", header=F, col.names=c("age", "type_employer", "fnlwgt", "education",
+                                                   "education_num","marital", "occupation", "relationship", "race","sex",
+                                                   "capital_gain", "capital_loss", "hr_per_week","country", "over50k"), stringsAsFactors = FALSE)
train=read.csv("adult.csv", header=F, col.names=c("age", "type_employer", "fnlwgt", "education",
"education_num","marital", "occupation", "relationship", "race","sex",
"capital_gain", "capital_loss", "hr_per_week","country", "over50k"), stringsAsFactors = FALSE)
nums <- sapply(train, is.numeric)
train=train[nums]
train$fnlwgt=NULL
View(train)
p <- ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=over50k)) + facet_wrap( ~ variable, scales="free")
print(p)
df.m=melt(train,id.var=over50k)
vdfvr
View(train)
train=read.csv("adult.csv", header=F, col.names=c("age", "type_employer", "fnlwgt", "education",
"education_num","marital", "occupation", "relationship", "race","sex",
"capital_gain", "capital_loss", "hr_per_week","country", "over50k"), stringsAsFactors = FALSE)
train$over50k=ifelse(train$over50k==train$over50k[1],0,1)
View(train)
train=train[nums]
cdcvfre
train=read.csv("adult.csv", header=F, col.names=c("age", "type_employer", "fnlwgt", "education",
"education_num","marital", "occupation", "relationship", "race","sex",
"capital_gain", "capital_loss", "hr_per_week","country", "over50k"), stringsAsFactors = FALSE)
train$over50k=ifelse(train$over50k==train$over50k[1],0,1)
nums <- sapply(train, is.numeric)
train=train[nums]
train$fnlwgt=NULL
View(train)
rm(df.m)
df.m=melt(train,id.var=over50k)
df.m=melt(train,id.var="over50k")
p <- ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=over50k)) + facet_wrap( ~ variable, scales="free")
print(p)
View(df.m)
p <- ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill="over50k")) + facet_wrap( ~ variable, scales="free")
print(p)
df.m$over50k=ifelse(df.m$over50k==1,">50k","<=50k")
p <- ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill="over50k")) + facet_wrap( ~ variable, scales="free")
print(p)
p <- ggplot(data = df.m, aes(x=variable, y=value)) + geom_boxplot(aes(fill=over50k)) + facet_wrap( ~ variable, scales="free")
print(p)
train=read.csv("adult.csv", header=F, col.names=c("age", "type_employer", "fnlwgt", "education",
"education_num","marital", "occupation", "relationship", "race","sex",
"capital_gain", "capital_loss", "hr_per_week","country", "over50k"), stringsAsFactors = FALSE)
boxplotnumeric(train)
source("boxplotnumeric.R")
boxplotnumeric(train)
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
source('~/Documents/Rprojects/THL311/Project.R')
load("/home/nikos/Desktop/Pattern Recognition Project /Project/THL311/.RData")
rm(list=ls())
load("/home/nikos/Desktop/Pattern Recognition Project /Project/THL311/.RData")
4/5
